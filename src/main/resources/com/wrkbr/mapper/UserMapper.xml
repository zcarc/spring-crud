<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wrkbr.mapper.UserMapper">


    <resultMap id="userMap" type="com.wrkbr.domain.UserVO">
        <id property="userid" column="userid" />
        <result property="userpw" column="userpw" />
        <result property="username" column="username" />
        <result property="usernickname" column="usernickname" />
        <result property="userGender" column="userGender" />
        <result property="userPhone" column="userPhone" />
        <result property="userEmail" column="userEmail" />
        <result property="userEmailHash" column="userEmailHash" />
        <result property="userEmailChecked" column="userEmailChecked" />
        <result property="userRegDate" column="userRegDate" />
        <result property="userUpdateDate" column="userUpdateDate" />
        <result property="enabled" column="enabled" />
        <collection property="authList" resultMap="authMap" />
    </resultMap>

    <resultMap id="authMap" type="com.wrkbr.domain.UserAuthVO">
        <result property="userid" column="userid" />
        <result property="auth" column="auth" />
    </resultMap>

    <select id="read" resultMap="userMap">
        <![CDATA[
          select user.userid, userpw, username, usernickname, userRegDate, userUpdateDate, enabled, auth.auth
          from user_table user
          left join user_table_auth auth
          on user.userid = auth.userid
          where user.userid = #{userid};
        ]]>

    </select>

    <select id="readProfile" resultType="com.wrkbr.domain.ProfileVO">
        <![CDATA[
          select user.userid, platform.kakao_id, platform.facebook_id, platform.google_id
          from user_table user
          left join user_table_platform platform
          on user.userid = platform.userid
          where user.userid = #{userid};
        ]]>

    </select>

    <select id="readNickname" resultType="String">
        select usernickname from user_table where userId = #{userId}
    </select>

    <select id="readId" resultType="String">
        select userid from user_table where userId = #{userid}
    </select>

    <select id="readEmail" resultType="String">
        select useremail from user_table where useremail = #{useremail}
    </select>

    <insert id="insert" >
      insert into user_table(userid, userpw, username, usernickname, userGender, userPhone, userEmail, userEmailHash, userEmailChecked)
      values(#{userid}, #{userpw}, #{username}, #{userid}, #{userGender}, #{userPhone}, #{userEmail}, #{userEmailHash}, #{userEmailChecked})
    </insert>

    <insert id="insertAuth">
      insert into user_table_auth(userid, auth)
      values(#{userid}, #{auth})
    </insert>


    <insert id="insertPlatformUser">
        insert into user_table(userid, userpw, usernickname) values(#{id}, #{pw}, #{id})
    </insert>

    <insert id="insertPlatformAuth">
      insert into user_table_auth(userid, auth) values(#{id}, #{auth})
    </insert>

    <insert id="insertPlatformTable">
        insert into user_table_platform (userid, kakao_id, ka_generate, facebook_id, fb_generate, google_id, gg_generate)
        values(#{userid}, #{kakao_id}, #{ka_generate}, #{facebook_id}, #{fb_generate}, #{google_id}, #{gg_generate})
    </insert>

    <select id="selectPrefix" resultType="String">

      select

        <choose>
            <when test="kakao_id != null">
                ka_generate
            </when>
            <when test="facebook_id != null">
                fb_generate
            </when>
            <when test="google_id != null">
                gg_generate
            </when>
        </choose>

        from user_table_platform where kakao_id = #{kakao_id} or facebook_id = #{facebook_id} or google_id = #{google_id}

    </select>

    <update id="updateUser">

        update user_table set usernickname = #{usernickname}

        <choose>

            <when test="userpw == '' || userpw == null">
                where userid = #{userid}
            </when>

            <when test="userpw != '' || userpw != null">
                , userpw = #{userpw} where userid = #{userid}
            </when>

        </choose>
    </update>

    <update id="updatePW">
        update user_table set userpw = #{userpw} where useremail = #{useremail}
    </update>


</mapper>